# Run weekly on main, Sundays at 23:00 UTC (6 pm CDT)
on:
  pull_request:
  #schedule:
  #  - cron: '0 23 * * 0'
  #push:
  #  branches:
  #    - main

jobs:
  qcow2-mount-inspect:
    name: Inspect qcow2 image files
    runs-on: ubuntu-latest

    strategy:
        matrix:
          image_name:
            - CC-Ubuntu24.04

    env:
      STAGING_CONTAINER_URL: ${{ secrets.STAGING_CONTAINER_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Install tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils jq curl

      - name: Lookup version
        id: lookup
        run: |
          version=$(curl -s "$STAGING_CONTAINER_URL/current" \
            | jq -r --arg img "${{ matrix.image_name }}" '.[$img]')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Download, mount and inspect ${{ matrix.image_name }}
        run: |
          IMG="${{ matrix.image_name }}"
          VER="${{ steps.lookup.outputs.version }}"
          URL="$STAGING_CONTAINER_URL/versions/$VER/$IMG.qcow2"

          echo "Downloading $URL"
          curl -L --retry 3 -o "${IMG}.qcow2" "$URL"

          sudo modprobe nbd max_part=8
          sudo qemu-nbd --connect=/dev/nbd0 "${IMG}.qcow2"
          echo "Waiting for partitions to appear"
          for i in {1..10}; do
            if ls /dev/nbd0p*; then break; fi
            sleep 1
          done

          # pick the largest partition, assuming that is the root partition
          ROOT_DEV=$(lsblk -b -ln -o NAME,SIZE /dev/nbd0 \
                     | awk '/nbd0p[0-9]+/ { print "/dev/" $1, $2 }' \
                     | sort -k2 -n \
                     | tail -n1 \
                     | awk '{print $1}')

          echo "Mounting root partition $ROOT_DEV"
          sudo mkdir -p /mnt/image
          sudo mount "$ROOT_DEV" /mnt/image

          echo "Inspecting $IMG"
          for tool in cc-generate-openrc cc-load-public-keys cc-mount-object-store cc-read-vendordata; do
            [ -x "/mnt/image/usr/local/bin/$tool" ] \
              || { echo "$tool missing!" >&2; exit 2; }
          done
          echo "/usr/local/bin tools found"

          for tool in cc-snapshot cloud-init rclone; do
            [ -x "/mnt/image/usr/bin/$tool" ] \
              || { echo "$tool missing!" >&2; exit 2; }
          done
          echo "/usr/bin tools found"

          # Optional cleanup, not really necessary since it's an ephemeral workspace
          #echo "Cleaning up $IMG"
          #sudo umount /mnt/image
          #sudo qemu-nbd --disconnect /dev/nbd0
          #rm -f "${IMG}.qcow2"
